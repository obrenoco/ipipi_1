<div
  id="map"
  style="width: 100%;
  height: 600px;"
  data-markers="<%= @markers.to_json %>"
  data-mapbox-api-key="<%= ENV['MAPBOX_API_KEY'] %>"
></div>

<span class="hidden" id="lat"></span>
<span class="hidden" id="lng"></span>
<span class="hidden" id="bathroom-lat"><%= params[:lat] %></span>
<span class="hidden" id="bathroom-lng"><%= params[:lng] %></span>
<div id="geocoder" class="geocoder"></div>

<script>
  // seleciona o nó alvo
  var target = document.querySelector('#map');

  // cria uma nova instância de observador
  var observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.addedNodes[0].className === "mapboxgl-popup-content") {
        navigator.geolocation.getCurrentPosition(position => {
          // Create the distance to display in the popup
          var originLat = position.coords.latitude;
          var originLng = position.coords.longitude;
          console.log(originLng);
          const bathroomLat = parseFloat(document.getElementById("card-bathroom-lat").innerText);
          const bathroomLng = parseFloat(document.getElementById("card-bathroom-lng").innerText);
          console.log(bathroomLat);
          const distanceDisplay = document.getElementById("distance-to");
          let from = turf.point([originLat,originLng]);
          let to = turf.point([bathroomLat,bathroomLng]);
          let options = {units: 'kilometers'};
          let distance = turf.distance(from, to, options);
          distanceDisplay.innerHTML = `${Math.round((distance + Number.EPSILON) * 100) / 100} km`;
          // Double click to redirect to google maps and done page on popup
          const googleLink = document.getElementById("google-maps");
          googleLink.addEventListener('click', (e) => {
            e.preventDefault();
            const bathroomId = parseFloat(document.getElementById("card-bathroom-id").innerText);
            const completeLink = "https://www.google.com/maps/dir/?api=1&origin=" + originLat + "," +
              originLng + "&destination=" + bathroomLat + "," + bathroomLng + "&travelmode=walking";
            const maps = window.open(completeLink, "_blank");
            const done = window.location.replace("/bathrooms/" + bathroomId + "/done");
            return maps, done;
          });
        },
        () => {},
        {maximumAge:60000, timeout:5000, enableHighAccuracy:true}
        );
      }
    });
  });
  // configuração do observador:
  var config = { childList: true, subtree: true };

  // passar o nó alvo, bem como as opções de observação
  observer.observe(target, config);
</script>
